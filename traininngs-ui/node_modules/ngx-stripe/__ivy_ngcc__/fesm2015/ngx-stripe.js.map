{"version":3,"file":"ngx-stripe.js","sources":["../../../projects/ngx-stripe/src/lib/directives/stripe-element-loading-template.directive.ts","../../../projects/ngx-stripe/src/lib/interfaces/ngx-stripe.interface.ts","../../../projects/ngx-stripe/src/lib/services/window-ref.service.ts","../../../projects/ngx-stripe/src/lib/services/document-ref.service.ts","../../../projects/ngx-stripe/src/lib/services/api-loader.service.ts","../../../projects/ngx-stripe/src/lib/services/stripe-instance.class.ts","../../../projects/ngx-stripe/src/lib/services/stripe.service.ts","../../../projects/ngx-stripe/src/lib/services/stripe-elements.service.ts","../../../projects/ngx-stripe/src/lib/components/card.component.ts","../../../projects/ngx-stripe/src/lib/directives/card-group.directive.ts","../../../projects/ngx-stripe/src/lib/components/card-number.component.ts","../../../projects/ngx-stripe/src/lib/components/card-expiry.component.ts","../../../projects/ngx-stripe/src/lib/components/card-cvc.component.ts","../../../projects/ngx-stripe/src/lib/components/fpx-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/ideal-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/iban.component.ts","../../../projects/ngx-stripe/src/lib/components/au-bank-account.component.ts","../../../projects/ngx-stripe/src/lib/components/payment-element.component.ts","../../../projects/ngx-stripe/src/lib/components/payment-request-button.component.ts","../../../projects/ngx-stripe/src/lib/services/stripe-factory.service.ts","../../../projects/ngx-stripe/src/lib/ngx-stripe.module.ts","../../../projects/ngx-stripe/src/public_api.ts","../../../projects/ngx-stripe/src/ngx-stripe.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngxStripeLoadingTemplate]'\n})\nexport class NgxStripeElementLoadingTemplateDirective {\n  constructor(public templateRef: TemplateRef<NgxStripeElementLoadingTemplateDirective>) {}\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>(\n  'Stripe Publishable Key'\n);\nexport const STRIPE_OPTIONS = new InjectionToken<StripeConstructorOptions>(\n  'Stripe Options'\n);\n\nexport const NGX_STRIPE_VERSION = new InjectionToken<string>('NGX_STRIPE_VERSION');\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeWindow(): Window {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n    return {} as Window;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeDocument(): Document {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n    return {} as Document;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { WindowRef } from './window-ref.service';\nimport { DocumentRef } from './document-ref.service';\n\nexport interface LazyStripeAPILoaderStatus {\n  loaded: boolean;\n  loading: boolean;\n  error: boolean;\n}\n\n@Injectable()\nexport class LazyStripeAPILoader {\n  public status = new BehaviorSubject<LazyStripeAPILoaderStatus>({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n\n  constructor(\n    @Inject(PLATFORM_ID) public platformId: any,\n    public window: WindowRef,\n    public document: DocumentRef\n  ) {}\n\n  public asStream(): Observable<LazyStripeAPILoaderStatus> {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  public isReady(): boolean {\n    return this.status.getValue().loaded;\n  }\n\n  public load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const status: LazyStripeAPILoaderStatus = this.status.getValue();\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({\n        ...status,\n        loading: true\n      });\n\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n}\n","import { BehaviorSubject, from, Observable } from 'rxjs';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\n\nimport {\n  ConfirmAcssDebitPaymentData,\n  ConfirmAcssDebitPaymentOptions,\n  ConfirmAfterpayClearpayPaymentData,\n  ConfirmAfterpayClearpayPaymentOptions,\n  ConfirmAlipayPaymentData,\n  ConfirmAlipayPaymentOptions,\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmBoletoPaymentData,\n  ConfirmBoletoPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmGrabPayPaymentData,\n  ConfirmGrabPayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmKlarnaPaymentData,\n  ConfirmKlarnaPaymentOptions,\n  ConfirmOxxoPaymentData,\n  ConfirmOxxoPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSofortPaymentData,\n  ConfirmWechatPayPaymentData,\n  ConfirmWechatPayPaymentOptions,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  VerifyMicrodepositsForPaymentData,\n  ConfirmAcssDebitSetupData,\n  ConfirmAcssDebitSetupOptions,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams,\n  ConfirmBacsDebitSetupData,\n  ConfirmBancontactSetupData,\n  ConfirmIdealSetupData,\n  ConfirmSofortSetupData,\n  VerifyMicrodepositsForSetupData,\n  WrapperLibrary,\n  VerificationSessionResult,\n  ConfirmPayPalPaymentData,\n  ConfirmPayPalSetupData,\n  ConfirmPaymentData,\n  ConfirmCustomerBalancePaymentData,\n  ConfirmCustomerBalancePaymentOptions,\n  ConfirmPayNowPaymentData,\n  ConfirmPayNowPaymentOptions,\n  ConfirmPromptPayPaymentData,\n  ConfirmPromptPayPaymentOptions,\n  ConfirmAffirmPaymentData,\n  ConfirmAffirmPaymentOptions\n} from '@stripe/stripe-js';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nexport class StripeInstance implements StripeServiceInterface {\n  private stripe$ = new BehaviorSubject<Stripe | undefined>(undefined);\n  stripe = this.stripe$\n    .asObservable()\n    .pipe(filter((stripe) => Boolean(stripe)));\n\n  constructor(\n    private version: string,\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef,\n    private key: string,\n    private options?: StripeConstructorOptions\n  ) {\n    this.loader\n      .asStream()\n      .pipe(\n        filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n        first(),\n        map(() => (this.window.getNativeWindow() as any).Stripe)\n      )\n      .subscribe((stripeInstance: any) => {\n        const stripe = this.options\n          ? (stripeInstance(this.key, this.options) as Stripe)\n          : (stripeInstance(this.key) as Stripe);\n\n        stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n        this.stripe$.next(stripe);\n      });\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe$.getValue();\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe$.asObservable().pipe(\n      filter((stripe) => Boolean(stripe)),\n      map((stripe) => stripe.elements(options)),\n      first()\n    );\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.redirectToCheckout(options))),\n      first()\n    );\n  }\n\n  confirmPayment(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }>;\n  confirmPayment(options: {\n    elements: StripeElements;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | {error: StripeError}>;\n  confirmPayment(options) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmPayment(options))),\n      first()\n    );\n  }\n\n  confirmAcssDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAcssDebitPaymentData,\n    options?: ConfirmAcssDebitPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAcssDebitPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmAlipayPayment(\n    clientSecret: string,\n    data?: ConfirmAlipayPaymentData,\n    options?: ConfirmAlipayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAlipayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmBancontactPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmBoletoPayment(\n    clientSecret: string,\n    data?: ConfirmBoletoPaymentData,\n    options?: ConfirmBoletoPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmBoletoPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmCustomerBalancePayment(\n    clientSecret: string,\n    data?: ConfirmCustomerBalancePaymentData,\n    options?: ConfirmCustomerBalancePaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmEpsPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmFpxPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmGiropayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmGrabPayPayment(\n    clientSecret: string,\n    data?: ConfirmGrabPayPaymentData,\n    options?: ConfirmGrabPayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmGrabPayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmIdealPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmKlarnaPayment(\n    clientSecret: string,\n    data?: ConfirmKlarnaPaymentData,\n    options?: ConfirmKlarnaPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmKlarnaPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmOxxoPayment(\n    clientSecret: string,\n    data?: ConfirmOxxoPaymentData,\n    options?: ConfirmOxxoPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmOxxoPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmP24Payment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmPayNowPayment(\n    clientSecret: string,\n    data?: ConfirmPayNowPaymentData,\n    options?: ConfirmPayNowPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmPayNowPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmPayPalPayment(\n    clientSecret: string,\n    data?: ConfirmPayPalPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmPayPalPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmPromptPayPayment(\n    clientSecret: string,\n    data?: ConfirmPromptPayPaymentData,\n    options?: ConfirmPromptPayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmPromptPayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmSofortPayment(\n    clientSecret: string,\n    data?: ConfirmSofortPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSofortPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmWechatPayPayment(\n    clientSecret: string,\n    data?: ConfirmWechatPayPaymentData,\n    options?: ConfirmWechatPayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmWechatPayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.handleCardAction(clientSecret))),\n      first()\n    );\n  }\n\n  verifyMicrodepositsForPayment(\n    clientSecret: string,\n    data?: VerifyMicrodepositsForPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.verifyMicrodepositsForPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.createPaymentMethod(paymentMethodData))\n      ),\n      first()\n    );\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))),\n      first()\n    );\n  }\n\n  confirmSetup(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }>;\n  confirmSetup(options: {\n    elements: StripeElements;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | { error: StripeError }>;\n  confirmSetup(options) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmSetup(options))),\n      first()\n    );\n  }\n\n  confirmAcssDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAcssDebitSetupData,\n    options?: ConfirmAcssDebitSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAcssDebitSetup(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmBacsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmBacsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmBacsDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmBancontactSetup(\n    clientSecret: string,\n    data?: ConfirmBancontactSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmBancontactSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardSetup(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmIdealSetup(\n    clientSecret: string,\n    data?: ConfirmIdealSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmIdealSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmPayPalSetup(\n    clientSecret: string,\n    data?: ConfirmPayPalSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmPayPalSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmSofortSetup(\n    clientSecret: string,\n    data?: ConfirmSofortSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSofortSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmAffirmPayment(\n    clientSecret: string,\n    data?: ConfirmAffirmPaymentData,\n    options?: ConfirmAffirmPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAffirmPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmAfterpayClearpayPayment(\n    clientSecret: string,\n    data?: ConfirmAfterpayClearpayPaymentData,\n    options?: ConfirmAfterpayClearpayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  verifyMicrodepositsForSetup(\n    clientSecret: string,\n    data?: VerifyMicrodepositsForSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.verifyMicrodepositsForSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveSetupIntent(clientSecret))),\n      first()\n    );\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    const stripe = this.getInstance();\n\n    return stripe ? stripe.paymentRequest(options) : undefined;\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createToken(tokenType, data))),\n      first()\n    );\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createSource(a, b))),\n      first()\n    );\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveSource(source))),\n      first()\n    );\n  }\n\n  verifyIdentity(clientSecret: string): Observable<VerificationSessionResult> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.verifyIdentity(clientSecret))),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmPaymentIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardSetup(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmSetupIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleFpxPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  private getNgxStripeAppInfo(version: string): WrapperLibrary {\n    return {\n      name: 'ngx-stripe',\n      url: 'https://ngx-stripe.dev',\n      partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n      version\n    };\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport {\n  ConfirmAcssDebitPaymentData,\n  ConfirmAcssDebitPaymentOptions,\n  ConfirmAfterpayClearpayPaymentData,\n  ConfirmAfterpayClearpayPaymentOptions,\n  ConfirmAlipayPaymentData,\n  ConfirmAlipayPaymentOptions,\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmBoletoPaymentData,\n  ConfirmBoletoPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmGrabPayPaymentData,\n  ConfirmGrabPayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmKlarnaPaymentData,\n  ConfirmKlarnaPaymentOptions,\n  ConfirmOxxoPaymentData,\n  ConfirmOxxoPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSofortPaymentData,\n  ConfirmWechatPayPaymentData,\n  ConfirmWechatPayPaymentOptions,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  VerifyMicrodepositsForPaymentData,\n  ConfirmAcssDebitSetupData,\n  ConfirmAcssDebitSetupOptions,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams,\n  ConfirmBacsDebitSetupData,\n  ConfirmBancontactSetupData,\n  ConfirmIdealSetupData,\n  ConfirmSofortSetupData,\n  VerifyMicrodepositsForSetupData,\n  VerificationSessionResult,\n  ConfirmPayPalPaymentData,\n  ConfirmPayPalSetupData,\n  ConfirmPaymentData,\n  ConfirmCustomerBalancePaymentData,\n  ConfirmCustomerBalancePaymentOptions,\n  ConfirmPayNowPaymentData,\n  ConfirmPayNowPaymentOptions,\n  ConfirmPromptPayPaymentData,\n  ConfirmPromptPayPaymentOptions,\n  ConfirmAffirmPaymentData,\n  ConfirmAffirmPaymentOptions,\n} from '@stripe/stripe-js';\n\nimport {\n  STRIPE_PUBLISHABLE_KEY,\n  STRIPE_OPTIONS,\n  NGX_STRIPE_VERSION\n} from '../interfaces/ngx-stripe.interface';\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeService implements StripeServiceInterface {\n  stripe!: StripeInstance;\n\n  constructor(\n    @Inject(NGX_STRIPE_VERSION) public version: string,\n    @Inject(STRIPE_PUBLISHABLE_KEY) public key: string,\n    @Inject(STRIPE_OPTIONS) public options: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {\n    if (key) {\n      this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    }\n  }\n\n  getStripeReference(): Observable<any> {\n    return this.loader.asStream().pipe(\n      filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n      map(() => (this.window.getNativeWindow() as any).Stripe)\n    );\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe.getInstance();\n  }\n\n  setKey(key: string, options?: StripeConstructorOptions) {\n    return this.changeKey(key, options);\n  }\n\n  changeKey(key: string, options?: StripeConstructorOptions) {\n    this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n\n    return this.stripe;\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe.elements(options);\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.redirectToCheckout(options);\n  }\n\n  confirmPayment(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }>;\n  confirmPayment(options: {\n    elements: StripeElements;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | {error: StripeError}>;\n  confirmPayment(options) {\n    return this.stripe.confirmPayment(options);\n  }\n\n  confirmAcssDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAcssDebitPaymentData,\n    options?: ConfirmAcssDebitPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n  }\n\n  confirmAlipayPayment(\n    clientSecret: string,\n    data?: ConfirmAlipayPaymentData,\n    options?: ConfirmAlipayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n\n  confirmBoletoPayment(\n    clientSecret: string,\n    data?: ConfirmBoletoPaymentData,\n    options?: ConfirmBoletoPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n\n  confirmCustomerBalancePayment(\n    clientSecret: string,\n    data?: ConfirmCustomerBalancePaymentData,\n    options?: ConfirmCustomerBalancePaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n\n  confirmGrabPayPayment(\n    clientSecret: string,\n    data?: ConfirmGrabPayPaymentData,\n    options?: ConfirmGrabPayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n\n  confirmKlarnaPayment(\n    clientSecret: string,\n    data?: ConfirmKlarnaPaymentData,\n    options?: ConfirmKlarnaPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n  }\n\n  confirmOxxoPayment(\n    clientSecret: string,\n    data?: ConfirmOxxoPaymentData,\n    options?: ConfirmOxxoPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n\n  confirmPayNowPayment(\n    clientSecret: string,\n    data?: ConfirmPayNowPaymentData,\n    options?: ConfirmPayNowPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n  }\n\n  confirmPayPalPayment(\n    clientSecret: string,\n    data?: ConfirmPayPalPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmPayPalPayment(clientSecret, data);\n  }\n\n  confirmPromptPayPayment(\n    clientSecret: string,\n    data?: ConfirmPromptPayPaymentData,\n    options?: ConfirmPromptPayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n\n  confirmSofortPayment(\n    clientSecret: string,\n    data?: ConfirmSofortPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSofortPayment(clientSecret, data);\n  }\n\n  confirmWechatPayPayment(\n    clientSecret: string,\n    data?: ConfirmWechatPayPaymentData,\n    options?: ConfirmWechatPayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n\n  verifyMicrodepositsForPayment(\n    clientSecret: string,\n    data?: VerifyMicrodepositsForPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.createPaymentMethod(paymentMethodData);\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n\n  confirmSetup(options: {\n    elements: StripeElements;\n    confirmParams?: Partial<ConfirmPaymentData>;\n    redirect: 'if_required';\n  }): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }>;\n  confirmSetup(options: {\n    elements: StripeElements;\n    confirmParams: ConfirmPaymentData;\n    redirect?: 'always';\n  }): Observable<never | { error: StripeError }>;\n  confirmSetup(options) {\n    return this.stripe.confirmSetup(options);\n  }\n\n  confirmAcssDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAcssDebitSetupData,\n    options?: ConfirmAcssDebitSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n\n  confirmBacsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmBacsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n  }\n\n  confirmBancontactSetup(\n    clientSecret: string,\n    data?: ConfirmBancontactSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmBancontactSetup(clientSecret, data);\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n\n  confirmIdealSetup(\n    clientSecret: string,\n    data?: ConfirmIdealSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmIdealSetup(clientSecret, data);\n  }\n\n  confirmPayPalSetup(\n    clientSecret: string,\n    data?: ConfirmPayPalSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmPayPalSetup(clientSecret, data);\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n\n  confirmSofortSetup(\n    clientSecret: string,\n    data?: ConfirmSofortSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSofortSetup(clientSecret, data);\n  }\n\n  confirmAffirmPayment(\n    clientSecret: string,\n    data?: ConfirmAffirmPaymentData,\n    options?: ConfirmAffirmPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n  }\n\n  confirmAfterpayClearpayPayment(\n    clientSecret: string,\n    data?: ConfirmAfterpayClearpayPaymentData,\n    options?: ConfirmAfterpayClearpayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n  }\n\n  verifyMicrodepositsForSetup(\n    clientSecret: string,\n    data?: VerifyMicrodepositsForSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    return this.stripe.paymentRequest(options);\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.createSource(a, b);\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.retrieveSource(source);\n  }\n\n  verifyIdentity(clientSecret: string): Observable<VerificationSessionResult> {\n    return this.stripe.verifyIdentity(clientSecret);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {\n  PaymentRequest,\n  PaymentRequestOptions,\n  StripeCardElementOptions,\n  StripeAuBankAccountElementOptions,\n  StripeCardNumberElementOptions,\n  StripeCardExpiryElementOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeFpxBankElementOptions,\n  StripeIbanElementOptions,\n  StripeIdealBankElementOptions,\n  StripePaymentRequestButtonElementOptions,\n  StripePaymentElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeService } from './stripe.service';\n\n@Injectable()\nexport class StripeElementsService {\n  constructor(private stripeService: StripeService) {}\n\n  elements(\n    stripe,\n    options: StripeElementsOptions = {}\n  ): Observable<StripeElements> {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n      return this.stripeService.elements();\n    }\n  }\n\n  paymentRequest(\n    stripe,\n    options: PaymentRequestOptions\n  ): PaymentRequest | undefined {\n    return stripe\n      ? stripe.paymentRequest(options)\n      : this.stripeService.paymentRequest(options);\n  }\n\n  mergeOptions(\n    options: StripeCardElementOptions,\n    containerClass: string\n  ): StripeCardElementOptions;\n  mergeOptions(\n    options: StripeCardNumberElementOptions,\n    containerClass: string\n  ): StripeCardNumberElementOptions;\n  mergeOptions(\n    options: StripeCardExpiryElementOptions,\n    containerClass: string\n  ): StripeCardExpiryElementOptions;\n  mergeOptions(\n    options: StripeFpxBankElementOptions,\n    containerClass: string\n  ): StripeFpxBankElementOptions;\n  mergeOptions(\n    options: StripeIbanElementOptions,\n    containerClass: string\n  ): StripeIbanElementOptions;\n  mergeOptions(\n    options: StripeIdealBankElementOptions,\n    containerClass: string\n  ): StripeIdealBankElementOptions;\n  mergeOptions(\n    options: StripeAuBankAccountElementOptions,\n    containerClass: string\n  ): StripeAuBankAccountElementOptions;\n  mergeOptions(\n    options: StripePaymentRequestButtonElementOptions,\n    containerClass: string\n  ): StripePaymentRequestButtonElementOptions;\n  mergeOptions(\n    options: StripePaymentElementOptions,\n    containerClass: string\n  ): StripePaymentElementOptions;\n  mergeOptions(options, containerClass: string) {\n    if (!containerClass || (options && options.classes)) {\n      return options || {};\n    }\n\n    if (!options || !options.classes) {\n      return {\n        ...(options || {}),\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      };\n    }\n\n    return options || {};\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeCardElementOptions,\n  StripeCardElement,\n  StripeElements,\n  StripeCardElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card',\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n})\nexport class StripeCardComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeCardElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeCardElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCard() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeCardElementOptions> = {}) {\n    this.element = this.elements.create('card', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { StripeElements, StripeElementsOptions } from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Directive({\n  selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n})\nexport class StripeCardGroupDirective implements OnInit, OnChanges {\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() elements = new EventEmitter<StripeElements>();\n\n  _elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n\n    if (changes.elementsOptions || changes.stripe || !this._elements) {\n      this._elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements.emit(this._elements);\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this._elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.elements.emit(this._elements);\n\n      this.state = 'ready';\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardNumberElement,\n  StripeCardNumberElementOptions,\n  StripeCardNumberElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-number',\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n})\nexport class StripeCardNumberComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardNumberElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardNumberElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardNumberElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardNumberElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() public cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardNumberComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardNumberElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardNumber() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardExpiryElement,\n  StripeCardExpiryElementOptions,\n  StripeCardExpiryElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-expiry',\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n})\nexport class StripeCardExpiryComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardExpiryElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardExpiryElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardExpiryElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardExpiryElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() public cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardExpiryComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardExpiryElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardExpiry() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardCvcElement,\n  StripeCardCvcElementChangeEvent,\n  StripeCardCvcElementOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-cvc',\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n})\nexport class StripeCardCvcComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardCvcElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardCvcElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardCvcElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardCvcElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() public cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardCvcComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardCvcElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardCvc() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeFpxBankElement,\n  StripeFpxBankElementChangeEvent,\n  StripeFpxBankElementOptions\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-fpx-bank',\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n})\nexport class StripeFpxBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeFpxBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeFpxBankElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeFpxBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeFpxBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeFpxBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getFpxBank() {\n    return this.element;\n  }\n\n  private createElement(\n    options: StripeFpxBankElementOptions = { accountHolderType: 'individual' }\n  ) {\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIdealBankElement,\n  StripeIdealBankElementOptions,\n  StripeIdealBankElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-ideal-bank',\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n})\nexport class StripeIdealBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIdealBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIdealBankElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIdealBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIdealBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIdealBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIdealBank() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIdealBankElementOptions> = {}) {\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIbanElement,\n  StripeIbanElementOptions,\n  StripeIbanElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-iban',\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n})\nexport class StripeIbanComponent implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIbanElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIbanElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIbanElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIbanElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIbanElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIban() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIbanElementOptions> = {}) {\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeAuBankAccountElement,\n  StripeAuBankAccountElementOptions,\n  StripeAuBankAccountElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { NgxStripeElementLoadingTemplateDirective } from '../directives/stripe-element-loading-template.directive';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-au-bank-account',\n  template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n})\nexport class StripeAuBankAccountComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @ContentChild(NgxStripeElementLoadingTemplateDirective, { read: TemplateRef })\n  loadingTemplate?: TemplateRef<NgxStripeElementLoadingTemplateDirective>;\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeAuBankAccountElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeAuBankAccountElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeAuBankAccountElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeAuBankAccountElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeAuBankAccountElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getAuBankAccount() {\n    return this.element;\n  }\n\n  private createElement(\n    options: Partial<StripeAuBankAccountElementOptions> = {}\n  ) {\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  OnDestroy,\n  Input,\n  ViewChild,\n  ElementRef,\n  Output,\n  EventEmitter,\n  SimpleChanges\n} from '@angular/core';\n\nimport {\n  Appearance,\n  StripeElements,\n  StripeElementsOptions,\n  StripePaymentElement,\n  StripePaymentElementChangeEvent,\n  StripePaymentElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeElementsService } from '../services/stripe-elements.service';\nimport { StripeInstance } from '../services/stripe-instance.class';\n\n@Component({\n  selector: 'ngx-stripe-payment',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripePaymentElementComponent implements OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripePaymentElement;\n  elements: StripeElements;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripePaymentElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Input() appearance: Appearance;\n  @Input() clientSecret: string;\n  @Input() doNotCreateUntilClientSecretIsSet = false;\n\n  @Output() load = new EventEmitter<StripePaymentElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripePaymentElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, {\n          ...(this.elementsOptions || {}),\n          ...(this.appearance ? { appearance: this.appearance } : {}),\n          ...(this.clientSecret ? { clientSecret: this.clientSecret } : {})\n        })\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripePaymentElementOptions>): StripePaymentElement {\n    return this.element.update(options);\n  }\n\n  collapse(): StripePaymentElement {\n    return this.element.collapse();\n  }\n\n  private createElement(options: Partial<StripePaymentElementOptions> = {}) {\n    try {\n      this.element = this.elements.create('payment', options);\n    } catch (err) {\n      this.elements = null;\n      throw err;\n    }\n\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { Observable, from } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  PaymentRequestOptions,\n  PaymentRequest,\n  CanMakePaymentResult,\n  PaymentRequestUpdateOptions,\n  StripePaymentRequestButtonElement,\n  StripePaymentRequestButtonElementOptions,\n  StripePaymentRequestButtonElementClickEvent,\n  PaymentRequestTokenEvent,\n  PaymentRequestPaymentMethodEvent,\n  PaymentRequestSourceEvent,\n  PaymentRequestShippingAddressEvent,\n  PaymentRequestShippingOptionEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-payment-request-button',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripePaymentRequestButtonComponent implements OnChanges {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripePaymentRequestButtonElement;\n  paymentRequest!: PaymentRequest;\n\n  @Input() containerClass: string;\n  @Input() paymentOptions: PaymentRequestOptions;\n  @Input() options: StripePaymentRequestButtonElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<{\n    paymentRequestButton: StripePaymentRequestButtonElement;\n    paymentRequest: PaymentRequest;\n  }>();\n\n  @Output() change = new EventEmitter<\n    StripePaymentRequestButtonElementClickEvent\n  >();\n  @Output() blur = new EventEmitter<void>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n\n  @Output() token = new EventEmitter<PaymentRequestTokenEvent>();\n  @Output() paymentMethod = new EventEmitter<\n    PaymentRequestPaymentMethodEvent\n  >();\n  @Output() source = new EventEmitter<PaymentRequestSourceEvent>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() shippingaddresschange = new EventEmitter<\n    PaymentRequestShippingAddressEvent\n  >();\n  @Output() shippingoptionchange = new EventEmitter<\n    PaymentRequestShippingOptionEvent\n  >();\n  @Output() notavailable = new EventEmitter<void>();\n\n  elements: StripeElements;\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      const elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements = elements;\n      updateElements = true;\n    }\n\n    if (changes.paymentOptions && this.paymentRequest) {\n      this.updateRequest(this.paymentOptions);\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.paymentRequest = this.stripeElementsService.paymentRequest(\n          stripe,\n          this.paymentOptions\n        );\n        this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n        this.paymentRequest.on('paymentmethod', (ev) =>\n          this.paymentMethod.emit(ev)\n        );\n        this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n        this.paymentRequest.on('cancel', () => this.cancel.emit());\n        this.paymentRequest.on('shippingaddresschange', (ev) =>\n          this.shippingaddresschange.emit(ev)\n        );\n        this.paymentRequest.on('shippingoptionchange', (ev) =>\n          this.shippingoptionchange.emit(ev)\n        );\n        this.element = this.elements.create('paymentRequestButton', {\n          paymentRequest: this.paymentRequest,\n          ...options\n        });\n\n        this.canMakePayment().subscribe((result) => {\n          if (result) {\n            this.element.on('click', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n\n            this.element.mount(this.stripeElementRef.nativeElement);\n\n            this.load.emit({\n              paymentRequestButton: this.element,\n              paymentRequest: this.paymentRequest\n            });\n          } else {\n            this.notavailable.emit();\n          }\n        });\n      }\n    }\n  }\n\n  canMakePayment(): Observable<CanMakePaymentResult | null> {\n    return from(this.paymentRequest.canMakePayment());\n  }\n\n  update(options: Partial<StripePaymentRequestButtonElementOptions>) {\n    this.element.update(options);\n  }\n\n  updateRequest(options: PaymentRequestUpdateOptions) {\n    const { currency, total, displayItems, shippingOptions } = options;\n\n    this.paymentRequest.update({\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    });\n  }\n\n  show() {\n    this.paymentRequest.show();\n  }\n\n  /**\n   * @deprecated\n   */\n  getButton() {\n    return this.element;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport {\n  NGX_STRIPE_VERSION,\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from '../interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './api-loader.service';\nimport { WindowRef } from './window-ref.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeFactoryService {\n  constructor(\n    @Inject(NGX_STRIPE_VERSION) public version: string,\n    @Inject(STRIPE_PUBLISHABLE_KEY) public baseKey: string,\n    @Inject(STRIPE_OPTIONS) public baseOptions: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {}\n\n  public create(\n    key?: string,\n    options?: StripeConstructorOptions\n  ): StripeInstance {\n    if (!key && !this.baseKey) {\n      return null;\n    }\n\n    return new StripeInstance(\n      this.version,\n      this.loader,\n      this.window,\n      key || this.baseKey,\n      options || this.baseOptions\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport { StripeCardComponent } from './components/card.component';\nimport { StripeCardNumberComponent } from './components/card-number.component';\nimport { StripeCardExpiryComponent } from './components/card-expiry.component';\nimport { StripeCardCvcComponent } from './components/card-cvc.component';\nimport { StripeFpxBankComponent } from './components/fpx-bank.component';\nimport { StripeIdealBankComponent } from './components/ideal-bank.component';\nimport { StripeIbanComponent } from './components/iban.component';\nimport { StripeAuBankAccountComponent } from './components/au-bank-account.component';\nimport { StripePaymentElementComponent } from './components/payment-element.component';\nimport { StripePaymentRequestButtonComponent } from './components/payment-request-button.component';\n\nimport { StripeCardGroupDirective } from './directives/card-group.directive';\nimport { NgxStripeElementLoadingTemplateDirective } from './directives/stripe-element-loading-template.directive';\n\nimport {\n  NGX_STRIPE_VERSION,\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from './interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './services/api-loader.service';\nimport { WindowRef } from './services/window-ref.service';\nimport { DocumentRef } from './services/document-ref.service';\nimport { StripeService } from './services/stripe.service';\nimport { StripeFactoryService } from './services/stripe-factory.service';\nimport { StripeElementsService } from './services/stripe-elements.service';\n\nconst components = [\n  StripeCardComponent,\n  StripeCardNumberComponent,\n  StripeCardExpiryComponent,\n  StripeCardCvcComponent,\n  StripeFpxBankComponent,\n  StripeIdealBankComponent,\n  StripeIbanComponent,\n  StripeAuBankAccountComponent,\n  StripePaymentElementComponent,\n  StripePaymentRequestButtonComponent\n];\n\nconst directives = [\n  StripeCardGroupDirective,\n  NgxStripeElementLoadingTemplateDirective\n];\n\nconst currentVersion = '12.7.2';\n\n@NgModule({\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives],\n  imports: [CommonModule]\n})\nexport class NgxStripeModule {\n  public static forRoot(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGX_STRIPE_VERSION,\n          useValue: currentVersion\n        }\n      ]\n    };\n  }\n\n  public static forChild(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGX_STRIPE_VERSION,\n          useValue: currentVersion\n        }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-stripe\n */\nexport { NgxStripeModule } from './lib/ngx-stripe.module';\n\nexport { StripeCardComponent } from './lib/components/card.component';\nexport { StripeCardNumberComponent } from './lib/components/card-number.component';\nexport { StripeCardExpiryComponent } from './lib/components/card-expiry.component';\nexport { StripeCardCvcComponent } from './lib/components/card-cvc.component';\nexport { StripeFpxBankComponent } from './lib/components/fpx-bank.component';\nexport { StripeIbanComponent } from './lib/components/iban.component';\nexport { StripeIdealBankComponent } from './lib/components/ideal-bank.component';\nexport { StripeAuBankAccountComponent } from './lib/components/au-bank-account.component';\nexport { StripePaymentElementComponent } from './lib/components/payment-element.component';\nexport { StripePaymentRequestButtonComponent } from './lib/components/payment-request-button.component';\n\nexport { StripeCardGroupDirective } from './lib/directives/card-group.directive';\nexport { NgxStripeElementLoadingTemplateDirective } from './lib/directives/stripe-element-loading-template.directive';\n\nexport { StripeService } from './lib/services/stripe.service';\nexport { StripeFactoryService } from './lib/services/stripe-factory.service';\nexport { StripeInstance } from './lib/services/stripe-instance.class';\nexport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './lib/services/api-loader.service';\nexport { StripeElementsService } from './lib/services/stripe-elements.service';\n\nexport { WindowRef } from './lib/services/window-ref.service';\nexport { DocumentRef } from './lib/services/document-ref.service';\n\nexport {\n  STRIPE_PUBLISHABLE_KEY,\n  STRIPE_OPTIONS\n} from './lib/interfaces/ngx-stripe.interface';\nexport { StripeServiceInterface } from './lib/interfaces/stripe-instance.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NGX_STRIPE_VERSION as ɵa} from './lib/interfaces/ngx-stripe.interface';"]}