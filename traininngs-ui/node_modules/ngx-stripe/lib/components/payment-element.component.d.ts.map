{"version":3,"file":"payment-element.component.d.ts","sources":["payment-element.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, OnDestroy, ElementRef, EventEmitter, SimpleChanges } from '@angular/core';\nimport { Appearance, StripeElements, StripeElementsOptions, StripePaymentElement, StripePaymentElementChangeEvent, StripePaymentElementOptions } from '@stripe/stripe-js';\nimport { StripeElementsService } from '../services/stripe-elements.service';\nimport { StripeInstance } from '../services/stripe-instance.class';\nexport declare class StripePaymentElementComponent implements OnChanges, OnDestroy {\n    stripeElementsService: StripeElementsService;\n    stripeElementRef: ElementRef;\n    element: StripePaymentElement;\n    elements: StripeElements;\n    containerClass: string;\n    options: Partial<StripePaymentElementOptions>;\n    elementsOptions: Partial<StripeElementsOptions>;\n    stripe: StripeInstance;\n    appearance: Appearance;\n    clientSecret: string;\n    doNotCreateUntilClientSecretIsSet: boolean;\n    load: EventEmitter<StripePaymentElement>;\n    blur: EventEmitter<void>;\n    change: EventEmitter<StripePaymentElementChangeEvent>;\n    focus: EventEmitter<void>;\n    ready: EventEmitter<void>;\n    escape: EventEmitter<void>;\n    state: 'notready' | 'starting' | 'ready';\n    constructor(stripeElementsService: StripeElementsService);\n    ngOnChanges(changes: SimpleChanges): Promise<void>;\n    ngOnDestroy(): void;\n    update(options: Partial<StripePaymentElementOptions>): StripePaymentElement;\n    collapse(): StripePaymentElement;\n    private createElement;\n}\n"]}