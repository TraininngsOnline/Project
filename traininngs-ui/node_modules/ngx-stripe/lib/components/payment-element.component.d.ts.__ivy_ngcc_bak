import { OnChanges, OnDestroy, ElementRef, EventEmitter, SimpleChanges } from '@angular/core';
import { Appearance, StripeElements, StripeElementsOptions, StripePaymentElement, StripePaymentElementChangeEvent, StripePaymentElementOptions } from '@stripe/stripe-js';
import { StripeElementsService } from '../services/stripe-elements.service';
import { StripeInstance } from '../services/stripe-instance.class';
export declare class StripePaymentElementComponent implements OnChanges, OnDestroy {
    stripeElementsService: StripeElementsService;
    stripeElementRef: ElementRef;
    element: StripePaymentElement;
    elements: StripeElements;
    containerClass: string;
    options: Partial<StripePaymentElementOptions>;
    elementsOptions: Partial<StripeElementsOptions>;
    stripe: StripeInstance;
    appearance: Appearance;
    clientSecret: string;
    doNotCreateUntilClientSecretIsSet: boolean;
    load: EventEmitter<StripePaymentElement>;
    blur: EventEmitter<void>;
    change: EventEmitter<StripePaymentElementChangeEvent>;
    focus: EventEmitter<void>;
    ready: EventEmitter<void>;
    escape: EventEmitter<void>;
    state: 'notready' | 'starting' | 'ready';
    constructor(stripeElementsService: StripeElementsService);
    ngOnChanges(changes: SimpleChanges): Promise<void>;
    ngOnDestroy(): void;
    update(options: Partial<StripePaymentElementOptions>): StripePaymentElement;
    collapse(): StripePaymentElement;
    private createElement;
}
